[{"/Users/sylvainvendeol/Documents/GitHub/escrow-generator/app/src/index.js":"1","/Users/sylvainvendeol/Documents/GitHub/escrow-generator/app/src/reportWebVitals.js":"2","/Users/sylvainvendeol/Documents/GitHub/escrow-generator/app/src/App.js":"3","/Users/sylvainvendeol/Documents/GitHub/escrow-generator/app/src/pages/Home/home.js":"4","/Users/sylvainvendeol/Documents/GitHub/escrow-generator/app/src/pages/History/history.js":"5","/Users/sylvainvendeol/Documents/GitHub/escrow-generator/app/src/pages/SimpleEscrow/escrowContract.js":"6","/Users/sylvainvendeol/Documents/GitHub/escrow-generator/app/src/pages/Vesting/vestingContract.js":"7","/Users/sylvainvendeol/Documents/GitHub/escrow-generator/app/src/pages/Locker/lockerContract.js":"8","/Users/sylvainvendeol/Documents/GitHub/escrow-generator/app/src/components/Navbar/index.js":"9","/Users/sylvainvendeol/Documents/GitHub/escrow-generator/app/src/pages/Vesting/vestingHistory.js":"10","/Users/sylvainvendeol/Documents/GitHub/escrow-generator/app/src/pages/SimpleEscrow/escrowDeploy.js":"11","/Users/sylvainvendeol/Documents/GitHub/escrow-generator/app/src/pages/Vesting/vestingDeploy.js":"12","/Users/sylvainvendeol/Documents/GitHub/escrow-generator/app/src/pages/SimpleEscrow/escrowHistory.js":"13","/Users/sylvainvendeol/Documents/GitHub/escrow-generator/app/src/pages/Locker/lockerHistory.js":"14","/Users/sylvainvendeol/Documents/GitHub/escrow-generator/app/src/pages/Locker/lockerDeploy.js":"15"},{"size":716,"mtime":1687734715140,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1686127586406,"results":"18","hashOfConfig":"17"},{"size":955,"mtime":1688597085021,"results":"19","hashOfConfig":"17"},{"size":2709,"mtime":1688597040612,"results":"20","hashOfConfig":"17"},{"size":16861,"mtime":1688596994672,"results":"21","hashOfConfig":"17"},{"size":1982,"mtime":1688596907782,"results":"22","hashOfConfig":"17"},{"size":2668,"mtime":1688549261001,"results":"23","hashOfConfig":"17"},{"size":1967,"mtime":1688553635358,"results":"24","hashOfConfig":"17"},{"size":758,"mtime":1687851097074,"results":"25","hashOfConfig":"17"},{"size":2068,"mtime":1688544190319,"results":"26","hashOfConfig":"17"},{"size":369,"mtime":1687929717259,"results":"27","hashOfConfig":"17"},{"size":384,"mtime":1688544648837,"results":"28","hashOfConfig":"17"},{"size":2333,"mtime":1688503278277,"results":"29","hashOfConfig":"17"},{"size":2183,"mtime":1688541681813,"results":"30","hashOfConfig":"17"},{"size":377,"mtime":1688459489100,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gga4ys",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sylvainvendeol/Documents/GitHub/escrow-generator/app/src/index.js",[],[],"/Users/sylvainvendeol/Documents/GitHub/escrow-generator/app/src/reportWebVitals.js",[],[],"/Users/sylvainvendeol/Documents/GitHub/escrow-generator/app/src/App.js",["87"],[],"import React from 'react';\nimport { ethers } from 'ethers';\n\nimport { BrowserRouter, Routes, Route } from 'react-router-dom'\nimport  Navbar  from './components/Navbar';\n\nimport Home from './pages/Home/home';\nimport SimpleEscrow from './pages/SimpleEscrow/escrowContract';\nimport Locker from './pages/Locker/lockerContract';\nimport VestingContract from './pages/Vesting/vestingContract';\nimport History from './pages/History/history';\n\n\n\n\nfunction App() {\n  return (\n    <div className='App' >\n      <Navbar />\n      <BrowserRouter>\n        <Routes>\n          <Route exact path=\"/\" element={<Home />} />\n          <Route exact path=\"/simple-escrow\" element={<SimpleEscrow />} />\n          <Route exact path=\"/locker\" element={<Locker />} />\n          <Route exact path=\"/vesting\" element={<VestingContract />} />\n          <Route exact path=\"/history\" element={<History />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;","/Users/sylvainvendeol/Documents/GitHub/escrow-generator/app/src/pages/Home/home.js",["88"],[],"import React from 'react';\nimport { ethers } from 'ethers';\n\nconst provider = new ethers.providers.Web3Provider(window.ethereum);\n\nfunction Home() {\n    return(\n        <div className='page'>\n                <h2 className='explain'>\n                    Welcome, this application will take you through the process of\n                    setting up different types of escrow contracts.\n                </h2>\n                    <h3 className='contract-types'>\n                        <p className='escrow-description'>\n                         <a href={`/simple-escrow`} >Simple Escrow: </a>\n                         <br></br> \n                         <br></br>\n                            In this type of contract, funds are locked until a third\n                            party address approve, or decline the transfer.\n                            <br></br>  \n                            <br></br>\n                            Upon approval funds are transferred to the beneficiary, whilst\n                            upon decline they are returned to the deployer of the contract.\n                            <br></br>\n                            <br></br>\n                            Only the chosen third party address will be able to unlock the funds.\n                        </p>\n                        <p className='locker-description'>\n                            <a href={`/locker`} >Balance lock: </a>\n                            <br></br>\n                            <br></br>\n                            In this type of contracts, funds are locked until a certain amount\n                            of time, chosen by the deployer, has passed.\n                            <br></br>\n                            <br></br>\n                            No third party is needed, and only the chosen beneficiary will be \n                            able to withdraw the funds once the locking period is finished.\n                        </p>\n                        <p className='vesting-description'>\n                            <a href={`/vesting`} >Vesting contract: </a>\n                            <br></br>\n                            <br></br>\n                            In this type of contracts funds are released in increments over a\n                            certain number of periods (at the moment weekly).\n                            <br></br>\n                            <br></br>\n                            No third party is needed, and only the chosen beneficiary will be \n                            able to claim funds with each vesting period.\n                        </p>\n                    </h3>\n                    \n            \n        </div>\n    );\n}\n\nexport default Home;","/Users/sylvainvendeol/Documents/GitHub/escrow-generator/app/src/pages/History/history.js",["89","90","91","92","93"],[],"import { ethers } from 'ethers';\nimport { useEffect, useState } from 'react';\nimport AbiHistory from '../../artifacts/contracts/History.sol/History';\nimport AbiLocker from '../../artifacts/contracts/TokenLock.sol/TokenLock';\nimport AbiVester from '../../artifacts/contracts/Vested.sol/Vesting';\nimport AbiEscrow from '../../artifacts/contracts/Escrow.sol/Escrow';\n\nimport Escrow from '../SimpleEscrow/escrowHistory';\nimport Timelocker from '../Locker/lockerHistory';\nimport Vester from '../Vesting/vestingHistory';\n\nconst provider = new ethers.providers.Web3Provider(window.ethereum);\nconst historyContractAddress = '0xD81267Ce7922fbaAd6D9ac4422B312D4516586FD';\n\nexport async function approve(escrowContract, signer) {\n    const approveTxn = await escrowContract.connect(signer).approve();\n    await approveTxn.wait();\n  }\nexport async function cancel(escrowContract, signer) {\n      const approveTxn = await escrowContract.connect(signer).cancel();\n      await approveTxn.wait();\n  }\nexport async function claim(lockerContract, signer) {\n    const approveTxn = await lockerContract.connect(signer).claim();\n    await approveTxn.wait();\n  }\nexport async function vestingClaim(vestingContract, signer) {\n    const approveTxn = await vestingContract.connect(signer).claim();\n    await approveTxn.wait();\n  }\n\nfunction History() {\n    const [account, setAccount] = useState();\n\n    const [contractHistory, setEsContractHistory] = useState([]);\n    const [arbiterHistory, setEsArbiterHistory] = useState([]);\n    const [beneficiaryHistory, setEsBeneficiaryHistory] = useState([]);\n\n    const [lockerDeployer, setLockerDeployer] = useState([]);\n    const [lockerBeneficiary, setLockerBeneficiary] = useState([]);\n\n    const [vesterDeployer, setVesterDeployer] = useState([]);\n    const [vesterBeneficiary, setVesterBeneficiary] = useState([]);\n\n    useEffect(() => {\n        async function getAccounts() {\n            const accounts = await provider.send('eth_requestAccounts', []);\n            const signer = provider.getSigner();\n\n            //Create an instance of the History contract\n            const historyContract = new ethers.Contract(historyContractAddress, AbiHistory.abi, signer);\n\n //============================= HISTORY OF SIMPLE ESCROW CONTRACT =============================================\n            \n            const escrowAsDeployer = await historyContract.viewEscrow(accounts[0]);\n\n            const escrowAsArbiter = await historyContract.viewAsArbiter(accounts[0]);\n\n            const escrowAsBeneficiary = await historyContract.viewAsBeneficiary(accounts[0]);\n\n            //first extract required items from asDeployer into an array of an array, then transform the sub-array into an object\n            //and finally add he finctions handleApprove and handleCancle into the object.  Final result is an array of objects\n            const historyAsDeployer = escrowAsDeployer.map(item => [\n                                                    item.contractAddress,\n                                                    item.arbiter,\n                                                    item.beneficiary,\n                                                    ethers.utils.formatEther(item.value.toString()),\n                                                    item.typeOf\n                                                  ])\n                                          .map(([address, arbiter, beneficiary, value, typeOf]) => ({ address, arbiter, beneficiary, value, typeOf }))\n                                          .map(item => ({...item,\n                                                        role: \"Deployer\",\n                                                        }));\n            const historyAsArbiter = escrowAsArbiter.map(item => [\n                                                  item.contractAddress,\n                                                  item.arbiter,\n                                                  item.beneficiary,\n                                                  ethers.utils.formatEther(item.value.toString()),\n                                                  item.typeOf\n                                                ])\n                                              .map(([address, arbiter, beneficiary, value, typeOf]) => ({ address, arbiter, beneficiary, value, typeOf }))\n                                              .map(item => ({...item,\n                                                            role: \"Arbiter\", \n                                                            handleApprove: async function() {\n                                                                              const escrowContract = new ethers.Contract(item.address, AbiEscrow.abi,signer);\n                                                                              escrowContract.on('Approved', () => {\n                                                                                document.getElementById(escrowContract.address).className = 'complete';\n                                                                                document.getElementById(escrowContract.address).innerText = \"✓ It's been approved!\";\n                                                                              });\n                                                                              await approve(escrowContract, signer);\n                                                                          },\n                                                            handleCancel: async function() {\n                                                                              const escrowContract = new ethers.Contract(item.address, AbiEscrow.abi,signer);\n                                                                              escrowContract.on('Cancelled', () => {\n                                                                                document.getElementById(escrowContract.address).className = 'cancelled';\n                                                                                document.getElementById(escrowContract.address).innerText = \"X It's been cancelled!\";\n                                                                              });\n                                                                              await cancel(escrowContract, signer);\n                                                                          }\n                                                            }));\n            const historyAsBeneficiary = escrowAsBeneficiary.map(item => [\n                                                    item.contractAddress,\n                                                    item.arbiter,\n                                                    item.beneficiary,\n                                                    ethers.utils.formatEther(item.value.toString()),\n                                                    item.typeOf\n                                                  ])\n                                                .map(([address, arbiter, beneficiary, value, typeOf]) => ({ address, arbiter, beneficiary, value, typeOf }))\n                                                .map(item => ({...item,\n                                                              role: \"Beneficiary\",\n                                                              }));\n\n//================================== HISTORY OF LOCKER CONTRACT ===================================================================\n               \n            const lockerAsDeployer = await historyContract.viewLockerAsDeployer(accounts[0]);\n\n            const lockerAsBeneficiary = await historyContract.viewLockerAsBeneficiary(accounts[0]);\n\n            const historyLockerAsDeployer = lockerAsDeployer.map(item => [\n                                                            item.contractAddress,\n                                                            item.beneficiary,\n                                                            ethers.utils.formatEther(item.value.toString()),\n                                                            item.typeOf,\n                                                            parseInt(item.lockPeriod).toString()\n                                                          ])\n                                                      .map(([address, beneficiary, value, typeOf, lockPeriod]) => ({ address, beneficiary, value, typeOf, lockPeriod }))\n                                                      .map(item => ({...item,\n                                                                    role: \"Deployer\",\n                                                                    }));\n\n            const historyLockerAsBeneficiary = lockerAsBeneficiary.map(item => [\n                                                                        item.contractAddress,\n                                                                        item.beneficiary,\n                                                                        ethers.utils.formatEther(item.value.toString()),\n                                                                        item.typeOf,\n                                                                        item.lockPeriod.toNumber()\n                                                                      ])\n                                                                  .map(([address, beneficiary, value, typeOf, lockPeriod ]) => ({ address, beneficiary, value, typeOf, lockPeriod }))\n                                                                  .map(item => ({...item,\n                                                                                role: \"Beneficiary\",\n                                                                                handleClaim: async function() {\n                                                                                                const lockerContract = new ethers.Contract(item.address, AbiLocker.abi,signer);\n                                                                                                lockerContract.on('Claimed', () => {\n                                                                                                  document.getElementById(lockerContract.address).className = 'claimed';\n                                                                                                  document.getElementById(lockerContract.address).innerText = \"✓ It's been claimed!\";\n                                                                                                });\n                                                                                                await claim(lockerContract, signer);\n                                                                                            }\n                                                                                }));\n\n//================================== HISTORY OF VESTING CONTRACT ===================================================================\n\n            const vesterAsDeployer = await historyContract.viewVesterAsDeployer(accounts[0]);\n\n            const vesterAsBeneficiary = await historyContract.viewVesterAsBeneficiary(accounts[0]);\n\n            const historyVesterAsDeployer = vesterAsDeployer.map(item => [\n                                                                  item.contractAddress,\n                                                                  item.beneficiary,\n                                                                  ethers.utils.formatEther(item.value.toString()),\n                                                                  item.typeOf,\n                                                                  parseInt(item.numberOfClaims).toString()\n                                                                ])\n                                                            .map(([address, beneficiary, value, typeOf, numberOfClaims]) => ({ address, beneficiary, value, typeOf, numberOfClaims }))\n                                                            .map(item => ({...item,\n                                                                          role: \"Deployer\",\n                                                                          }));\n\n            const historyVesterAsBeneficiary = vesterAsBeneficiary.map(item => [\n                                                                        item.contractAddress,\n                                                                        item.beneficiary,\n                                                                        ethers.utils.formatEther(item.value.toString()),\n                                                                        item.typeOf,\n                                                                        item.numberOfClaims.toNumber()\n                                                                      ])\n                                                                  .map(([address, beneficiary, value, typeOf, numberOfClaims ]) => ({ address, beneficiary, value, typeOf, numberOfClaims }))\n                                                                  .map(item => ({...item,\n                                                                                role: \"Beneficiary\",\n                                                                                handleClaim: async function() {\n                                                                                                const vesterContract = new ethers.Contract(item.address, AbiVester.abi,signer);\n                                                                                                vesterContract.on('Claimed', () => {\n                                                                                                  document.getElementById(vesterContract.address).className = 'claimed';\n                                                                                                  document.getElementById(vesterContract.address).innerText = \"✓ It's been claimed!\";\n                                                                                                });\n                                                                                                await vestingClaim(vesterContract, signer);\n                                                                                            }\n                                                                                }));\n\n            setAccount(accounts[0]);\n\n            setEsContractHistory(historyAsDeployer);\n            setEsArbiterHistory(historyAsArbiter);\n            setEsBeneficiaryHistory(historyAsBeneficiary)\n\n            setLockerDeployer(historyLockerAsDeployer);\n            setLockerBeneficiary(historyLockerAsBeneficiary);\n\n            setVesterDeployer(historyVesterAsDeployer);\n            setVesterBeneficiary(historyVesterAsBeneficiary);\n        }\n    \n        getAccounts();\n        }, [account]);\n\n     if(contractHistory.length == 0 && arbiterHistory.length ==0 && beneficiaryHistory.length == 0\n          && lockerDeployer.length == 0 && lockerBeneficiary == 0) {\n        return(\n            <div className='page'>\n                <h1> History </h1>\n                <h2> Nothing to display </h2>\n            </div>\n        )\n      } else{\n        return(\n            <div className='page'>\n                <h1> History </h1>\n                <div className=\"existing-contracts\">\n                    <div id=\"container\">\n                        {contractHistory.map((contract) => {\n                            return <Escrow key={contract.address} {...contract} />\n                        })}\n                        {arbiterHistory.map((contract) => {\n                            return <Escrow key={contract.address} {...contract} />\n                        })}\n                        {beneficiaryHistory.map((contract) => {\n                            return <Escrow key={contract.address} {...contract} />\n                        })}\n                        {lockerDeployer.map((contract) => {\n                            return <Timelocker key={contract.address} {...contract} />\n                        })}\n                        {lockerBeneficiary.map((contract) => {\n                            return <Timelocker key={contract.address} {...contract} />\n                        })}\n                        {vesterDeployer.map((contract) => {\n                            return <Vester key={contract.address} {...contract} />\n                        })}\n                        {vesterBeneficiary.map((contract) => {\n                            return <Vester key={contract.address} {...contract} />\n                        })}\n                        \n                    </div>\n                </div>\n            </div>\n        )\n      }\n}\n\nexport default History;","/Users/sylvainvendeol/Documents/GitHub/escrow-generator/app/src/pages/SimpleEscrow/escrowContract.js",["94"],[],"import { ethers } from 'ethers';\nimport { useEffect, useState } from 'react';\nimport deploy from './escrowDeploy';\n\nconst provider = new ethers.providers.Web3Provider(window.ethereum);\n\nfunction SimpleEscrow() {\n\n    const [account, setAccount] = useState();\n    const [signer, setSigner] = useState();\n\n    useEffect(() => {\n    async function getAccounts() {\n        const accounts = await provider.send('eth_requestAccounts', []);\n\n        setAccount(accounts[0]);\n        setSigner(provider.getSigner());\n    }\n\n    getAccounts();\n    }, [account]);\n\n\n    async function newContract() {\n        const beneficiary = document.getElementById('beneficiary').value;\n        const arbiter = document.getElementById('arbiter').value;\n        const value = ethers.utils.parseEther(document.getElementById('ETH').value);\n        const historyContractAddress = '0xD81267Ce7922fbaAd6D9ac4422B312D4516586FD';\n        const escrowContract = await deploy(signer, historyContractAddress, arbiter, beneficiary, value);\n    }\n\n    return (\n        <>\n        <div className='page'>\n            <h1> New Escrow Contract</h1>\n            <div className=\"contract\">\n                <label>\n                Third party address that will approve or decline the transfer of funds\n                <input type=\"text\" id=\"arbiter\" />\n                </label>\n\n                <label>\n                Beneficiary of the funds\n                <input type=\"text\" id=\"beneficiary\" />\n                </label>\n\n                <label>\n                Deposit Amount (in ETH)\n                <input type=\"text\" id=\"ETH\" />\n                </label>\n\n                <div\n                className=\"button\"\n                id=\"deploy\"\n                onClick={(e) => {\n                    e.preventDefault();\n\n                    newContract();\n                }}\n                >\n                Deploy\n                </div>\n            </div>\n        </div>\n        </>\n    );\n}\n\nexport default SimpleEscrow;","/Users/sylvainvendeol/Documents/GitHub/escrow-generator/app/src/pages/Vesting/vestingContract.js",["95"],[],"import { ethers } from 'ethers';\nimport { useEffect, useState } from 'react';\nimport deploy from './vestingDeploy';\n\nconst provider = new ethers.providers.Web3Provider(window.ethereum);\n\nexport async function claim(vestingContract, signer) {\n    const approveTxn = await vestingContract.connect(signer).claim();\n    await approveTxn.wait();\n  }\n\nfunction VestingContract() {\n\n    const [account, setAccount] = useState();\n    const [signer, setSigner] = useState();\n\n    useEffect(() => {\n        async function getAccounts() {\n            const accounts = await provider.send('eth_requestAccounts', []);\n    \n            setAccount(accounts[0]);\n            setSigner(provider.getSigner());\n        }\n    \n        getAccounts();\n        }, [account]);\n\n    async function newContract() {\n        const beneficiary = document.getElementById('beneficiary').value;\n        const numberOfClaims = parseInt(document.getElementById('number-of-claims').value);\n        //const vestingIntervals = parseInt(document.getElementById('vesting-intervals').value);\n            //Not needed for now, hardcoded to weekly vesting\n        const value = ethers.utils.parseEther(document.getElementById('ETH').value);\n        const historyContract = \"0xD81267Ce7922fbaAd6D9ac4422B312D4516586FD\";\n        const vestingContract = await deploy(historyContract, signer, beneficiary, numberOfClaims, value);\n    \n    }\n\n    return (\n        <>\n        <div className='page'>\n            <h1> New Vesting Contract</h1>\n            <div className=\"contract\">\n                <label>\n                Beneficiary Address\n                <input type=\"text\" id=\"beneficiary\" />\n                </label>\n\n                <label>\n                Number of weeks the vesting should be over\n                <input type=\"text\" id=\"number-of-claims\" />\n                </label>\n\n                <label>\n                Deposit Amount (in ETH)\n                <input type=\"text\" id=\"ETH\" />\n                </label>\n\n                <div\n                className=\"button\"\n                id=\"deploy\"\n                onClick={(e) => {\n                    e.preventDefault();\n\n                    newContract();\n                }}\n                >\n                Deploy\n                </div>\n            </div>\n\n            {/* <div className=\"existing-contracts\">\n                <h1> Existing Contracts </h1>\n\n                <div id=\"container\">\n                {vesters.map((vester) => {\n                    return <Vester key={vester.address} {...vester} />;\n                })}\n                </div>\n            </div> */}\n            </div>\n        </>\n    );\n\n}\n\nexport default VestingContract;","/Users/sylvainvendeol/Documents/GitHub/escrow-generator/app/src/pages/Locker/lockerContract.js",["96"],[],"import { ethers } from 'ethers';\nimport { useEffect, useState } from 'react';\nimport deploy from './lockerDeploy';\n\nconst provider = new ethers.providers.Web3Provider(window.ethereum);\n\nfunction Locker() {\n\n    const [account, setAccount] = useState();\n    const [signer, setSigner] = useState();\n\n    useEffect(() => {\n        async function getAccounts() {\n            const accounts = await provider.send('eth_requestAccounts', []);\n    \n            setAccount(accounts[0]);\n            setSigner(provider.getSigner());\n        }\n    \n        getAccounts();\n        }, [account]);\n    \n    async function newContract() {\n        const beneficiary = document.getElementById('beneficiary').value;\n        const lockTime = parseInt(document.getElementById('lock-time').value);\n        const value = ethers.utils.parseEther(document.getElementById('ETH').value);\n        const historyContract = \"0xD81267Ce7922fbaAd6D9ac4422B312D4516586FD\";\n        const lockerContract = await deploy(historyContract, signer, beneficiary, lockTime, value);\n    }\n\n    return (\n        <>\n        <div className='page'>\n            <h1> New Locker Contract</h1>\n            <div className=\"contract\">\n                <label>\n                Beneficiary Address\n                <input type=\"text\" id=\"beneficiary\" />\n                </label>\n\n                <label>\n                Length of time to lock in days\n                <input type=\"text\" id=\"lock-time\" />\n                </label>\n\n                <label>\n                Deposit Amount (in ETH)\n                <input type=\"text\" id=\"ETH\" />\n                </label>\n\n                <div\n                className=\"button\"\n                id=\"deploy\"\n                onClick={(e) => {\n                    e.preventDefault();\n\n                    newContract();\n                }}\n                >\n                Deploy\n                </div>\n            </div>\n        </div>\n        </>\n    );\n\n}\n\nexport default Locker;","/Users/sylvainvendeol/Documents/GitHub/escrow-generator/app/src/components/Navbar/index.js",["97","98"],[],"import React from 'react';\nimport './Navbar.css'\nimport { useEffect, useState } from 'react';\n\n\nexport const Navbar = () => {\n    return (\n        <nav className=\"nav\">\n            <a href=\"/\" className=\"home\">\n            Escrow Contracts Generator\n            </a>\n            <ul>\n               <a href=\"/simple-escrow\" className=\"link\">\n                Simple Escrow\n               </a>\n               <a href=\"/locker\" className='link'>\n                Locker\n               </a>\n               <a href=\"/vesting\" className='link'>\n                Vesting contract\n               </a>\n               <a href=\"/history\" className=\"link\">\n                History\n                </a>\n            </ul> \n        </nav>  \n    )  \n};\n\nexport default Navbar;","/Users/sylvainvendeol/Documents/GitHub/escrow-generator/app/src/pages/Vesting/vestingHistory.js",["99"],[],"//To handle deployed contracts html windown\nexport default function Vester({\n    address,\n    beneficiary,\n    numberOfClaims,\n    //verstingIntervals,\n    role,\n    typeOf,\n    value,\n    handleClaim,\n }) {\n\n  if(role == \"Beneficiary\") {\n    return (\n        <div className=\"existing-contract\">\n          <ul className=\"fields\">\n          <li>\n              <div> Contract Type: </div>\n              <div> {typeOf} </div>\n            </li>\n          <li>\n              <div> Role: </div>\n              <div> {role} </div>\n            </li>\n            <li>\n              <div> Contract Address: </div>\n              <div> {address} </div>\n            </li>\n            <li>\n              <div> Beneficiary: </div>\n              <div> {beneficiary} </div>\n            </li>\n            <li>\n              <div> Vested over: </div>\n              <div> {numberOfClaims} week(s) </div>\n            </li>\n            <li>\n              <div> Value: </div>\n              <div> {value} </div>\n            </li>\n            <div\n              className=\"claim-button\"\n              id={address}\n              onClick={(e) => {\n                e.preventDefault();\n    \n                handleClaim();\n              }}\n            >\n              Claim\n            </div>\n          </ul>\n        </div>\n      );\n  }\n  else{\n    return (\n      <div className=\"existing-contract\">\n        <ul className=\"fields\">\n        <li>\n            <div> Contract Type: </div>\n            <div> {typeOf} </div>\n          </li>\n        <li>\n            <div> Role: </div>\n            <div> {role} </div>\n          </li>\n          <li>\n            <div> Contract Address: </div>\n            <div> {address} </div>\n          </li>\n          <li>\n            <div> Beneficiary: </div>\n            <div> {beneficiary} </div>\n          </li>\n          <li>\n            <div> Vested over: </div>\n            <div> {numberOfClaims} week(s) </div>\n          </li>\n          <li>\n            <div> Value: </div>\n            <div> {value} </div>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n }","/Users/sylvainvendeol/Documents/GitHub/escrow-generator/app/src/pages/SimpleEscrow/escrowDeploy.js",[],[],"/Users/sylvainvendeol/Documents/GitHub/escrow-generator/app/src/pages/Vesting/vestingDeploy.js",[],[],"/Users/sylvainvendeol/Documents/GitHub/escrow-generator/app/src/pages/SimpleEscrow/escrowHistory.js",["100","101","102"],[],"export default function Escrow({\n  address,\n  arbiter,\n  beneficiary,\n  value,\n  handleApprove,\n  handleCancel,\n  role,\n  typeOf,\n}) {\n\n  if(role == \"Deployer\" || role == \"Beneficiary\") {\n      return (\n        <div className=\"existing-contract\">\n          <ul className=\"fields\">\n          <li>\n              <div> Contract Type: </div>\n              <div> {typeOf} </div>\n            </li>\n          <li>\n              <div> Role: </div>\n              <div> {role} </div>\n            </li>\n            <li>\n              <div> Contract Address: </div>\n              <div> {address} </div>\n            </li>\n            <li>\n              <div> Arbiter </div>\n              <div> {arbiter} </div>\n            </li>\n            <li>\n              <div> Beneficiary </div>\n              <div> {beneficiary} </div>\n            </li>\n            <li>\n              <div> Value </div>\n              <div> {value} </div>\n            </li>\n          </ul>\n        </div>\n      );\n  }\n  else if(role == \"Arbiter\") {\n      return (\n        <div className=\"existing-contract\">\n          <ul className=\"fields\">\n          <li>\n              <div> Contract Type: </div>\n              <div> {typeOf} </div>\n            </li>\n          <li>\n              <div> Role: </div>\n              <div> {role} </div>\n            </li>\n            <li>\n              <div> Contract Address: </div>\n              <div> {address} </div>\n            </li>\n            <li>\n              <div> Arbiter </div>\n              <div> {arbiter} </div>\n            </li>\n            <li>\n              <div> Beneficiary </div>\n              <div> {beneficiary} </div>\n            </li>\n            <li>\n              <div> Value </div>\n              <div> {value} </div>\n            </li>\n            <div\n              className=\"approve-button\"\n              id={address}\n              onClick={(e) => {\n                e.preventDefault();\n\n                handleApprove();\n              }}\n            >\n              Approve\n            </div>\n            <div\n              className=\"cancel-button\"\n              id={address}\n              onClick={(e) => {\n                e.preventDefault();\n                \n                handleCancel();\n\n              }}\n            >\n              Cancel\n            </div>\n          </ul>\n        </div>\n      );\n  }\n}\n","/Users/sylvainvendeol/Documents/GitHub/escrow-generator/app/src/pages/Locker/lockerHistory.js",["103"],[],"//To handle deployed contracts html windown\nexport default function Timelocker({\n    address,\n    beneficiary,\n    lockPeriod,\n    value,\n    role,\n    typeOf,\n    handleClaim,\n }) {\n\n    if(role == \"Beneficiary\") {\n      return (\n          <div className=\"existing-contract\">\n            <ul className=\"fields\">\n            <li>\n                <div> Contract Type: </div>\n                <div> {typeOf} </div>\n              </li>\n            <li>\n                <div> Role: </div>\n                <div> {role} </div>\n              </li>\n              <li>\n                <div> Contract Address: </div>\n                <div> {address} </div>\n              </li>\n              <li>\n                <div> Beneficiary: </div>\n                <div> {beneficiary} </div>\n              </li>\n              <li>\n                <div> Lock Period: </div>\n                <div> {lockPeriod} day(s) </div>\n              </li>\n              <li>\n                <div> Value: </div>\n                <div> {value} </div>\n              </li>\n              <div\n                className=\"claim-button\"\n                id={address}\n                onClick={(e) => {\n                  e.preventDefault();\n      \n                  handleClaim();\n                }}\n              >\n                Claim\n              </div>\n            </ul>\n          </div>\n        );\n    }\n    else{\n      return (\n        <div className=\"existing-contract\">\n          <ul className=\"fields\">\n          <li>\n              <div> Contract Type: </div>\n              <div> {typeOf} </div>\n            </li>\n          <li>\n              <div> Role: </div>\n              <div> {role} </div>\n            </li>\n            <li>\n              <div> Contract Address: </div>\n              <div> {address} </div>\n            </li>\n            <li>\n              <div> Beneficiary: </div>\n              <div> {beneficiary} </div>\n            </li>\n            <li>\n              <div> Lock Period: </div>\n              <div> {lockPeriod} day(s) </div>\n            </li>\n            <li>\n              <div> Value: </div>\n              <div> {value} </div>\n            </li>\n          </ul>\n        </div>\n      );\n    }\n }","/Users/sylvainvendeol/Documents/GitHub/escrow-generator/app/src/pages/Locker/lockerDeploy.js",[],[],{"ruleId":"104","severity":1,"message":"105","line":2,"column":10,"nodeType":"106","messageId":"107","endLine":2,"endColumn":16},{"ruleId":"104","severity":1,"message":"108","line":4,"column":7,"nodeType":"106","messageId":"107","endLine":4,"endColumn":15},{"ruleId":"109","severity":1,"message":"110","line":205,"column":32,"nodeType":"111","messageId":"112","endLine":205,"endColumn":34},{"ruleId":"109","severity":1,"message":"110","line":205,"column":62,"nodeType":"111","messageId":"112","endLine":205,"endColumn":64},{"ruleId":"109","severity":1,"message":"110","line":205,"column":95,"nodeType":"111","messageId":"112","endLine":205,"endColumn":97},{"ruleId":"109","severity":1,"message":"110","line":206,"column":36,"nodeType":"111","messageId":"112","endLine":206,"endColumn":38},{"ruleId":"109","severity":1,"message":"110","line":206,"column":62,"nodeType":"111","messageId":"112","endLine":206,"endColumn":64},{"ruleId":"104","severity":1,"message":"113","line":29,"column":15,"nodeType":"106","messageId":"107","endLine":29,"endColumn":29},{"ruleId":"104","severity":1,"message":"114","line":35,"column":15,"nodeType":"106","messageId":"107","endLine":35,"endColumn":30},{"ruleId":"104","severity":1,"message":"115","line":28,"column":15,"nodeType":"106","messageId":"107","endLine":28,"endColumn":29},{"ruleId":"104","severity":1,"message":"116","line":3,"column":10,"nodeType":"106","messageId":"107","endLine":3,"endColumn":19},{"ruleId":"104","severity":1,"message":"117","line":3,"column":21,"nodeType":"106","messageId":"107","endLine":3,"endColumn":29},{"ruleId":"109","severity":1,"message":"110","line":13,"column":11,"nodeType":"111","messageId":"112","endLine":13,"endColumn":13},{"ruleId":"109","severity":1,"message":"110","line":12,"column":11,"nodeType":"111","messageId":"112","endLine":12,"endColumn":13},{"ruleId":"109","severity":1,"message":"110","line":12,"column":33,"nodeType":"111","messageId":"112","endLine":12,"endColumn":35},{"ruleId":"109","severity":1,"message":"110","line":44,"column":16,"nodeType":"111","messageId":"112","endLine":44,"endColumn":18},{"ruleId":"109","severity":1,"message":"110","line":12,"column":13,"nodeType":"111","messageId":"112","endLine":12,"endColumn":15},"no-unused-vars","'ethers' is defined but never used.","Identifier","unusedVar","'provider' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'escrowContract' is assigned a value but never used.","'vestingContract' is assigned a value but never used.","'lockerContract' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used."]